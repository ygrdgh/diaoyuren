{
  "uid" : "d9cef7e803bac55",
  "name" : "登录测试正向用例",
  "fullName" : "cases.test_login.TestLogin#test_login_success",
  "historyId" : "4de4eac7aa5437331edc4ae996ff58ee",
  "time" : {
    "start" : 1622194382736,
    "stop" : 1622194387311,
    "duration" : 4575
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert False\n +  where False = <bound method PageAction.is_nickname_exists of <pages.page_action.PageAction object at 0x000001DCC518E860>>()\n +    where <bound method PageAction.is_nickname_exists of <pages.page_action.PageAction object at 0x000001DCC518E860>> = <pages.page_action.PageAction object at 0x000001DCC518E860>.is_nickname_exists",
  "statusTrace" : "self = <cases.test_login.TestLogin object at 0x000001DCC518E0B8>\nhandler = (<appium.webdriver.webdriver.WebDriver (session=\"90af6122-4678-4f77-9a3d-2b9d1a32e71a\")>, <pages.page_action.PageAction object at 0x000001DCC518E860>)\n\n    @allure.story('钓鱼人APP自动化测试正向用例测试')\n    @allure.title('登录测试正向用例')\n    @pytest.mark.last\n    def test_login_success(self, handler):\n    \n        logger.info('++++++++++++++开始执行正向用例+++++++++++')\n        handler[1].login(success_data['username'], success_data['password'])\n        logger.info(\"登录操作完成\")\n        time.sleep(3)\n>       assert handler[1].is_nickname_exists()\nE       assert False\nE        +  where False = <bound method PageAction.is_nickname_exists of <pages.page_action.PageAction object at 0x000001DCC518E860>>()\nE        +    where <bound method PageAction.is_nickname_exists of <pages.page_action.PageAction object at 0x000001DCC518E860>> = <pages.page_action.PageAction object at 0x000001DCC518E860>.is_nickname_exists\n\ncases\\test_login.py:37: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "prepare_to_login",
    "time" : {
      "start" : 1622194376660,
      "stop" : 1622194382734,
      "duration" : 6074
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "handler",
    "time" : {
      "start" : 1622194358572,
      "stop" : 1622194376660,
      "duration" : 18088
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert False\n +  where False = <bound method PageAction.is_nickname_exists of <pages.page_action.PageAction object at 0x000001DCC518E860>>()\n +    where <bound method PageAction.is_nickname_exists of <pages.page_action.PageAction object at 0x000001DCC518E860>> = <pages.page_action.PageAction object at 0x000001DCC518E860>.is_nickname_exists",
    "statusTrace" : "self = <cases.test_login.TestLogin object at 0x000001DCC518E0B8>\nhandler = (<appium.webdriver.webdriver.WebDriver (session=\"90af6122-4678-4f77-9a3d-2b9d1a32e71a\")>, <pages.page_action.PageAction object at 0x000001DCC518E860>)\n\n    @allure.story('钓鱼人APP自动化测试正向用例测试')\n    @allure.title('登录测试正向用例')\n    @pytest.mark.last\n    def test_login_success(self, handler):\n    \n        logger.info('++++++++++++++开始执行正向用例+++++++++++')\n        handler[1].login(success_data['username'], success_data['password'])\n        logger.info(\"登录操作完成\")\n        time.sleep(3)\n>       assert handler[1].is_nickname_exists()\nE       assert False\nE        +  where False = <bound method PageAction.is_nickname_exists of <pages.page_action.PageAction object at 0x000001DCC518E860>>()\nE        +    where <bound method PageAction.is_nickname_exists of <pages.page_action.PageAction object at 0x000001DCC518E860>> = <pages.page_action.PageAction object at 0x000001DCC518E860>.is_nickname_exists\n\ncases\\test_login.py:37: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "1438ebcf36dd1ad9",
      "name" : "log",
      "source" : "1438ebcf36dd1ad9.txt",
      "type" : "text/plain",
      "size" : 10030
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true,
    "stepsCount" : 0
  },
  "afterStages" : [ {
    "name" : "handler::0",
    "time" : {
      "start" : 1622194387341,
      "stop" : 1622194387803,
      "duration" : 462
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "钓鱼人APP自动化测试-登陆功能测试"
  }, {
    "name" : "story",
    "value" : "钓鱼人APP自动化测试正向用例测试"
  }, {
    "name" : "epic",
    "value" : "钓鱼人APP自动化测试"
  }, {
    "name" : "tag",
    "value" : "run(order=-1)"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('prepare_to_login')"
  }, {
    "name" : "tag",
    "value" : "last"
  }, {
    "name" : "parentSuite",
    "value" : "cases"
  }, {
    "name" : "suite",
    "value" : "test_login"
  }, {
    "name" : "subSuite",
    "value" : "TestLogin"
  }, {
    "name" : "host",
    "value" : "DESKTOP-CIG6MR7"
  }, {
    "name" : "thread",
    "value" : "17352-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "cases.test_login"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ "last", "run(order=-1)", "@pytest.mark.usefixtures('prepare_to_login')" ]
  },
  "source" : "d9cef7e803bac55.json",
  "parameterValues" : [ ]
}